/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.fundamentalanalysis.gui;


import com.mycompany.fundamentalanalysis.Index;
import com.mycompany.fundamentalanalysis.Company;
import javax.swing.JFrame;

/**
 * MainJFrame is the class which is responsible for construction and operation
 * of graphical user interface.
 * 
 * MainJFrame object is also responsible capture and service events. 
 *  
 * @author tomeku
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Constructor with three parameters.
     * @param wig20 Parameter determines the content of the WIG20 index.
     * @param mwig40 Parameter determines the content of the mWIG40 index.
     * @param swig80 Parameter determines the content of the sWIG80 index.
     */
    public MainJFrame(Index wig20, Index mwig40, Index swig80) {
        initComponents();
        this.wig20 = wig20;
        this.mwig40 = mwig40;
        this.swig80 = swig80;
        setJTable1(jTable1, this.wig20);
        //exit on close
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //not allow to edit tables
        jTable1.setEnabled(false);
        jTable2.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fundamental Analysis v01");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Indeksy"));

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "WIG20", "mWIG40", "sWIG80" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Przegląd danych ze spółek z wybranego indeksu"));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nazwa spółki", "Aktualna wartość wskaźnika C/Z", "Aktualna wartość wskaźnika C/ZO"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel3.setText("Status danych: aktualne");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Przegląd danych", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ustawienia"));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WIG20", "mWIG40", "sWIG80" }));

        jLabel1.setText("Wybierz indeks");

        jLabel2.setText("Wybierz wskaźnik");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C/Z", "C/ZO" }));

        jButton1.setText("Aktualizuj zestawienie danych");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 534, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(44, 44, 44))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Zestawienie danych"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nazwa spółki", "Aktualna wartość wskaźnika", "Historyczna średnia wartość wskaźnika", "Procentowe odchylenie od średniej"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 712, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Porównanie danych historycznych", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * The method used to handle table 1 related events.
     * @param evt Parameter of list selection event.
     */
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        if(jList1.getSelectedIndex() == 0){
            setJTable1(jTable1, wig20);
        } else if (jList1.getSelectedIndex() == 1){
            setJTable1(jTable1, mwig40);
        } else if (jList1.getSelectedIndex() == 2){
            setJTable1(jTable1, swig80);
        }
    }//GEN-LAST:event_jList1ValueChanged

    /**
     * The method used to handle table 1 related events.
     * @param evt Parameter of mouse event.
     */
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (jComboBox1.getSelectedIndex() == 0 && jComboBox2.getSelectedIndex() == 0){
            setJTable2PE(jTable2, wig20);
        } else if (jComboBox1.getSelectedIndex() == 0 && jComboBox2.getSelectedIndex() == 1){
            setJTable2POE(jTable2, wig20);
        }
        
        if (jComboBox1.getSelectedIndex() == 1 && jComboBox2.getSelectedIndex() == 0){
            setJTable2PE(jTable2, mwig40);
        } else if (jComboBox1.getSelectedIndex() == 1 && jComboBox2.getSelectedIndex() == 1){
            setJTable2POE(jTable2, mwig40);
        }
        
        if (jComboBox1.getSelectedIndex() == 2 && jComboBox2.getSelectedIndex() == 0){
            setJTable2PE(jTable2, swig80);
        } else if (jComboBox1.getSelectedIndex() == 2 && jComboBox2.getSelectedIndex() == 1){
            setJTable2POE(jTable2, swig80);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
    private Index wig20;
    private Index mwig40;
    private Index swig80;
    
    /**
     * The method used to set or update table 1 content.
     * @param jtable Table where content should be set or update.
     * @param index Parameters which should be insert in table.
     */
    private void setJTable1 (javax.swing.JTable jtable, Index index) {
        
        javax.swing.table.DefaultTableModel dm = (javax.swing.table.DefaultTableModel)jtable.getModel();
        dm.setRowCount(index.getCompanyList().size());

        for (int i = 0; i < index.getCompanyList().size(); i++){
            jtable.getModel().setValueAt(index.getCompanyList().get(i).getCompanyName(), i, 0);
            jtable.getModel().setValueAt(index.getCompanyList().get(i).getCurrentPE(), i, 1);
            jtable.getModel().setValueAt(index.getCompanyList().get(i).getCurrentPOE(), i, 2);
        }
    }
    
    /**
     * The method used to set or update table 2 content by value of P/E indicators.
     * @param jtable Table where content should be set or update.
     * @param index Parameters which should be insert in table.
     */
    private void setJTable2PE (javax.swing.JTable jtable, Index index) {
        
        javax.swing.table.DefaultTableModel dm = (javax.swing.table.DefaultTableModel)jtable.getModel();
        dm.setRowCount(index.getCompanyList().size());

        for (int i = 0; i < index.getCompanyList().size(); i++){
            jtable.getModel().setValueAt(index.getCompanyList().get(i).getCompanyName(), i, 0);
            jtable.getModel().setValueAt(index.getCompanyList().get(i).getCurrentPE(), i, 1);
            jtable.getModel().setValueAt(index.getCompanyList().get(i).calculateHistoricalAveragePE(), i, 2);
            jtable.getModel().setValueAt(Company.percentageDeviationFromAverage(
                    index.getCompanyList().get(i).getCurrentPE(), 
                    index.getCompanyList().get(i).calculateHistoricalAveragePE()), i, 3);
        }
    }
    
    /**
     * The method used to set or update table 2 content by value of P/OE indicators.
     * @param jtable Table where content should be set or update.
     * @param index Parameters which should be insert in table.
     */
    private void setJTable2POE (javax.swing.JTable jtable, Index index) {
        
        javax.swing.table.DefaultTableModel dm = (javax.swing.table.DefaultTableModel)jtable.getModel();
        dm.setRowCount(index.getCompanyList().size());

        for (int i = 0; i < index.getCompanyList().size(); i++){
            jtable.getModel().setValueAt(index.getCompanyList().get(i).getCompanyName(), i, 0);
            jtable.getModel().setValueAt(index.getCompanyList().get(i).getCurrentPOE(), i, 1);
            jtable.getModel().setValueAt(index.getCompanyList().get(i).calculateHistoricalAveragePOE(), i, 2);
            jtable.getModel().setValueAt(Company.percentageDeviationFromAverage(
                    index.getCompanyList().get(i).getCurrentPOE(), 
                    index.getCompanyList().get(i).calculateHistoricalAveragePOE()), i, 3);
        }
    }
}
